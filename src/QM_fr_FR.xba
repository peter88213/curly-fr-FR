<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="QM_fr_FR" script:language="StarBasic">REM  *****  BASIC  *****
&apos; ----------------------------------------------------------------------
&apos; Do conversions according to french conventions.
&apos; ----------------------------------------------------------------------

Option Explicit

Dim isInitialized as boolean

&apos; ----------------------------------------------------------------------
&apos; Define language specific normal quotes
&apos; Guillemets als Standard
&apos; ----------------------------------------------------------------------
&apos; No const declaration here because of the hard spaces
&apos; requiring function calls &quot;Chr(160)&quot;.
&apos; The strings are defined by the init subroutine.
Private ChOpen1 as string
Private ChClose1 as string
Private ChOpen2 as string
Private ChClose2 as string

&apos; ----------------------------------------------------------------------
&apos; Define regular expression for direct speech
&apos; Regulärer Ausdruck für wörtliche Rede
&apos; ----------------------------------------------------------------------
Const SpeechRegex = &quot;«[^«]+»&quot;


sub Init
&apos; ----------------------------------------------------------------------
&apos; Load OOTyW basis library
&apos; ----------------------------------------------------------------------
&apos; ChOpen/Close1 is for speech within speech
&apos; ChOpen/Close2 is for initial quoting
ChOpen1 = &quot;‹&quot;+Chr(160)
ChClose1 = Chr(160)+&quot;›&quot;
ChOpen2 = &quot;«&quot;+Chr(160)
ChClose2 = Chr(160)+&quot;»&quot;

isInitialized = True

end sub



sub Main
&apos; ----------------------------------------------------------------------
&apos; Replace keyboard glyphs by typographical correct glyphs.
&apos; ----------------------------------------------------------------------

if (isInitialized = False) then Init

Common.Main
Common.Em_dash
SmartQuotes
ProtectQM

end sub



sub SmartQuotes
&apos; ----------------------------------------------------------------------
&apos; Remplacer des signes prime par guillemets.
&apos; Replace primes by french style quotation marks.
&apos; ----------------------------------------------------------------------

if (isInitialized = False) then Init

Common.SubstitutePrimesII
Common.CurlyQuotes(ChOpen1,ChClose1,ChOpen2,ChClose2)

end sub



Sub TypewriterView
&apos; ----------------------------------------------------------------------
&apos; Go back to &quot;typewriter&quot; style. 
&apos; ----------------------------------------------------------------------

if (isInitialized = False) then Init

Common.SubstituteQuotes(ChOpen1,ChClose1,ChOpen2,ChClose2)
Revert.PrimeII
Revert.Ellipsis
Revert.Dash
Revert.UnprotectQM

End Sub



Sub SubstituteQuotes
&apos; ----------------------------------------------------------------------
&apos; Exchange format for language conversion.
&apos; ----------------------------------------------------------------------

if (isInitialized = False) then Init

Common.SubstituteQuotes(ChOpen1,ChClose1,ChOpen2,ChClose2)

End Sub



sub ShowDirectSpeech
&apos; ----------------------------------------------------------------------
&apos; Gray-out all but direct speech.
&apos; ----------------------------------------------------------------------

if (isInitialized = False) then Init

Common.ShowDirectSpeech(SpeechRegex)

end sub



sub StandardView
&apos; ----------------------------------------------------------------------
&apos; Set all text to default color.
&apos; ----------------------------------------------------------------------

if (isInitialized = False) then Init

Common.StandardView

end sub



Sub ProtectQM
&apos; ----------------------------------------------------------------------
&apos; Ajouter espaces insécables devant et après.
&apos; Prevent hyphenation around quotation marks.
&apos; ----------------------------------------------------------------------

if (isInitialized = False) then Init

Common.ProtectQM(ChOpen2,ChClose2)

End Sub



Sub UnprotectQM
&apos; ----------------------------------------------------------------------
&apos; Allow hyphenation around quotation marks.
&apos; ----------------------------------------------------------------------

if (isInitialized = False) then Init

Common.UnprotectQM(ChOpen2,ChClose2)

End Sub




</script:module>